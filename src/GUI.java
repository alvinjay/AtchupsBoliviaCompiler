/*
    Programmers: Alvin Jay Cosare, Gabriel Lagmay, Raphael Tugasan
    Exercise 2: Atchups Bolivia Compiler, Date Due: February 27, 2015
*/

import ANALYZERS.LexicalAnalyzer;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.util.*;


/**
 * Description:
 *  -GUI Form Class
 *
 */
public class GUI extends JFrame implements ActionListener, KeyListener
{
    public JTextArea jta;
    public JMenuBar mbar;
    private JScrollPane jscroll;

    private FileHandler fileHandler;
    private CurrentFile currentFile;
    private Menu menu;

    private LexicalAnalyzer lex;

    private Vector columnIdentifiers;
    private DefaultTableModel lexemesTokensTableModel;

    public GUI()
    {
        mbar = new JMenuBar();

        columnIdentifiers = new Vector();
        columnIdentifiers.add("Lexeme"); columnIdentifiers.add("Token");
        lexemesTokensTableModel = new DefaultTableModel();
        lexemesTokensTableModel.setColumnIdentifiers(columnIdentifiers);

        initComponents();

        currentFile = new CurrentFile();
        fileHandler = new FileHandler(this, currentFile);
        lex = new LexicalAnalyzer();
        menu = new Menu(this, mbar, currentFile, fileHandler);
    }

    public void keyPressed(KeyEvent e){}
    public void keyReleased(KeyEvent e){}
    public void keyTyped(KeyEvent e)
    {
        currentFile.setModified(true);
    }

    public void actionPerformed(ActionEvent e)
    {
        if (!menu.fileTabActionListener(e)) {
            if (!menu.editTabActionListener(e)) {
                menu.runTabActionListener(e);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jta = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jta.setFont(new Font("Consolas", Font.PLAIN, 12));
        jta.addKeyListener(this);


        lexemesTokensTableModel.setColumnIdentifiers(columnIdentifiers);
        lexemesTokensTable = new JTable(lexemesTokensTableModel);


        jscroll = new JScrollPane(jta);
        add(jscroll, BorderLayout.CENTER );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jta.setText("No opened file");
        jta.setEnabled(false);
        jta.setColumns(20);
        jta.setRows(5);
        jScrollPane1.setViewportView(jta);

        jList1.setBackground(new java.awt.Color(255, 153, 51));
        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        lexemesTokensTable.setBackground(new java.awt.Color(153, 102, 255));
        jScrollPane3.setViewportView(lexemesTokensTable);

        jList3.setBackground(new java.awt.Color(0, 204, 204));
        jList3.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(jList3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                                        .addComponent(jScrollPane2))
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                        .addComponent(jScrollPane4))
                                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, 0)
                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane1)
                                                .addGap(0, 0, 0)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Displays the lexemes in the editor
     * @param lexemesTokens
     */
    public void setLexemesTokens(HashMap<String, String> lexemesTokens) {
        lexemesTokensTableModel.setDataVector(null, columnIdentifiers);

        Iterator iterator = lexemesTokens.entrySet().iterator(); //Format [KEY1=VALUE1, KEY2=VALUE2, ...]

        while(iterator.hasNext()) {
            lexemesTokensTableModel.addRow(iterator.next().toString().split("="));
        }


    }

    /**
     * Displays a save file dialog
     */
    private void showSaveDialog() {
        int res;
        res = JOptionPane.showConfirmDialog(this, "Do You Want to Save Changes", "File Exit", JOptionPane.YES_NO_CANCEL_OPTION);
        if(res == JOptionPane.YES_OPTION)
        {
            fileHandler.fileSave();
        }
        else if(res == JOptionPane.CANCEL_OPTION)
        {
            return;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jList1;
    private javax.swing.JTable lexemesTokensTable;
    private javax.swing.JList jList3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}